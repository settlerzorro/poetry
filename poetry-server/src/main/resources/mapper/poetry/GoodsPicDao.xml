<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.poetry.modules.poetry.dao.GoodsPicDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.poetry.modules.poetry.entity.GoodsPicEntity" id="goodsPicMap">
        <result property="id" column="id"/>
        <result property="goodsId" column="goods_id"/>
        <result property="picUrl" column="pic_url"/>
    </resultMap>

	<select id="queryObject" resultType="com.poetry.modules.poetry.entity.GoodsPicEntity">
		select * from order_goods_pic where id = #{value}
	</select>
	
	<select id="queryOneByGoodsId" resultType="com.poetry.modules.poetry.entity.GoodsPicEntity">
		select * from order_goods_pic where goods_id = #{value} limit 1
	</select>
	
	<select id="queryByGoodsId" resultType="string">
		select pic_url from order_goods_pic where goods_id = #{value}
	</select>

	<select id="queryList" resultType="com.poetry.modules.poetry.entity.GoodsPicEntity">
		select * from order_goods_pic
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from order_goods_pic 
	</select>
	 
	<insert id="save" parameterType="com.poetry.modules.poetry.entity.GoodsPicEntity" useGeneratedKeys="true" keyProperty="id">
		insert into order_goods_pic
		(
			`goods_id`, 
			`pic_url`
		)
		values
		(
			#{goodsId}, 
			#{picUrl}
		)
	</insert>
	 
	<update id="update" parameterType="com.poetry.modules.poetry.entity.GoodsPicEntity">
		update order_goods_pic 
		<set>
			<if test="goodsId != null">`goods_id` = #{goodsId}, </if>
			<if test="picUrl != null">`pic_url` = #{picUrl}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from order_goods_pic where id = #{value}
	</delete>
	
	<delete id="deleteByGoodsId">
		delete from order_goods_pic where goods_id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from order_goods_pic where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>